name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  sonar:
    name: Sonar CodeCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  ## Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  Artifact Image Build:

    runs-on: ubuntu-latest
    needs: [sonar]
    env:
       IMAGE_NAME: springboot-petclinic-actions
       REGISTRY_NAME: pwcinfradockerrg
       REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
       REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
       TAGS: v1

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      # exection permission
    - name: adding execution mode 
      run: chmod +x mvnw

    - name: Build with Maven Wrapper
      run: ./mvnw clean install

    - name: ACR login  
      uses: azure/docker-login@v1
      with:
            login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: change to server directory and build
      run: |-
        cd spring-petclinic-server ; 
        mvn clean package docker:build
    
    - name: tagging the image to push to ACR
      run: |-
        docker tag $IMAGE_NAME ${{ env.REGISTRY_NAME }}.azurecr.io/$IMAGE_NAME:$TAGS
        
    - name: Push image to ACR
      run: |-
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/$IMAGE_NAME:$TAGS